****************
* EEPROM-routs
* for 93C46 (1024bit => 64 16-bit words)
*
* created : 11.05.95
* last modified :
* 
* 16.02.96      leaner (thanks to Harry)
* 12.03.96      test for busy after write and erase (well, Harry ;)) )
* 22.08.97      ported to ra65 for use with cc65
* 02.12.97	added xref for the new ra65
*
*
* (c) 1995..97 Bastian Schick
* CS    = A7 (18)
* CLK   = A1 (11)
* DI/DO = AUDIN (32)
*
*And now how to contact the EEPROM :
*
*CARD
*PORT               ----\/----      93C46(SMD too)
*(18)  A7   --------| CS     |- +5V
*(11)  A1   --------| CLK    |- NC
*               +---| DI     |- NC
*(32) AUDIN ----+---| DO     |- GND
*                   ----------
*
****************

* C-functions:
*
* int  EE_Read(char cell);
* void EE_Write(char cell,int value);
* void EE_Erase(char cell);

* -------------------
* EEPROM command list
* -------------------
EE_C_WRITE      =    $40
EE_C_READ       =    $80
EE_C_ERASE      =    $C0
EE_C_EWEN       =    $30
EE_C_EWDS       =    $00

								bsszp

I2Cword         ds 2

								text

                global _EE_Read
                global _EE_Write
                global _EE_Erase

		xref popax,tstax
****************
* read 16bit Wort from address A
****************
_EE_Read:
                jsr popax
                and #$3f
                ora #EE_C_READ
                jsr EE_Send9Bit
                jsr EE_Read16Bit                ; fall into
                lda I2Cword
                ldx I2Cword+1
                jmp tstax

****************
* reads EEPROM-word to I2Cword
* A,Y destroyed
****************
EE_Read16Bit:
                lda #$a
                sta $fd8A       ; set AUDIN to Input
                
                clc
                stz I2Cword
                stz I2Cword+1
                ldy #15
EEloop1
; CLK = 1
                stz $fcb2
                stz $fcb2
; CLK = 0
                stz $fcb2
                stz $fcb2

                lda $fd8b
                and #$10        ; mask bit
                adc #$f0        ; C=1 if A=$10
                rol I2Cword
                rol I2Cword+1   ; shifts 0 to Carry
                dey
                bpl EEloop1
                
                ldx #$1a
                stx $fd8a       ; set AUDIN for output
;EE_SET_CS_LOW

                ldx #3
                stx $fd87
                dex
                stx $fd87

                rts
****************
* clear word at address A
****************
_EE_Erase:
                lda #EE_C_EWEN  ; EWEN
                jsr EE_Send9Bit
                jsr popax
                and #$3f
                ora #EE_C_ERASE ; clear cell A
                jsr EE_Send9Bit
                bra EE_wait
****************
* write word at address A
****************
_EE_Write:
                jsr popax
                sta I2Cword
                stx I2Cword+1
                lda #EE_C_EWEN  ; EWEN
                jsr EE_Send9Bit
                jsr popax
                and #$3f
                ora #EE_C_WRITE ; WRITE
                jsr EE_Send9Bit
                jsr EE_Send16Bit
                
EE_wait
; EE_SET_CS_HIGH

                ldx #63
EEloop
                  stz $fcb2
                  stz $fcb2
                  dex
                bpl EEloop

                lda #$0A
                sta $fd8a       ; AUDIN to input
                lda #$10
EE_wait1
                bit $fd8b       ; 'til ready :D0-read is /D0-written
                beq EE_wait1
                lda #$1a        ; AUDIN to output
                sta $fd8a
                
                lda #EE_C_EWDS  ; EWDS
;               bra EE_Send9Bit ; fall into
****************
* send A via I2C
* A,Y destroyed
****************
EE_Send9Bit:
; EE_SET_CS_LOW
                ldx #3
                stx $fd87
                dex
                stx $fd87
; EE_SET_CS_HIGH

                ldx #63
EEloop2
                  stz $fcb2
                  stz $fcb2
                  dex
                bpl EEloop2


                ldy #8
                sec             ; start bit
                ror A
                ror A
                ror A
                ror A           ; bit 8 at pos. 4
EEloop3
                 tax
                 and #$10
                 ora #$b
                 sta $fd8b
; CLK = 1
                stz $fcb2
                stz $fcb2
; CLK = 0
                stz $fcb2
                stz $fcb2
                 txa
                 rol A
                 dey
                bpl EEloop3
                rts
****************
* send I2Cword to EEPROM
* A,Y detroyed
****************
EE_Send16Bit:
                lda I2Cword+1

                ror A
                ror I2Cword
                ror A
                ror I2Cword
                ror A
                ror I2Cword

                ldy #15
EEloop4
                 tax
                 and #$10
                 ora #$b
                 sta $fd8b
; CLK = 1
                stz $fcb2
                stz $fcb2
; CLK = 0
                stz $fcb2
                stz $fcb2
                 txa
                 rol I2Cword
                 rol A
                 dey
                bpl EEloop4

; EE_SET_CS_LOW
                ldx #3
                stx $fd87
                dex
                stx $fd87
                rts
